<link href="[% c.uri_for( '/css/jquery.qtip.min.css' ) %]" rel="stylesheet">
<script type="text/javascript" src="[% c.uri_for( '/js/raphael-min.js' ) %]"></script>
<script type="text/javascript" src="[% c.uri_for( '/js/jquery.qtip.min.js' ) %]"></script>
<script type="text/javascript" src="[% c.uri_for( '/js/diagram.builder.js' ) %]"></script>

[% DEFAULT
  region_length_5F    = 500
  region_length_5R    = 100
  region_length_3F    = 100
  region_length_3R    = 500
  region_length_5R_EF = 200
  region_length_ER_3F = 200
  region_offset_5F    = 1000
  region_offset_3R    = 1000
  region_offset_5R    = 1
  region_offset_3F    = 1
  region_offset_5R_EF = 200
  region_offset_ER_3F = 100
%]

<script type="text/javascript">

function createGibsonDiagram(builder) {
  var fiveF = builder.addBox("5F");

  var fiveR = builder.addBox("5R");
  var EF = builder.addBoxWithoutSpacing("EF");

  var critExon = builder.addCriticalExon("Exon");

  var ER = builder.addBox("ER");
  var threeF = builder.addBoxWithoutSpacing("3F");

  var threeR = builder.addBox("3R");

  //add all the offset size fields to the fields we want them on
  builder.addLabel(fiveF, fiveR, "5F offset", "end to start", "region_offset_5F", '[% region_offset_5F %]');
  builder.addLabel(threeF, threeR, "3R offset", "end to start", "region_offset_3R", '[% region_offset_3R %]');
  builder.addLabel(EF, critExon, "5R-EF offset", "end to start", "region_offset_5R_EF", '[% region_offset_5R_EF %]');
  builder.addLabel(critExon, ER, "ER-3F offset", "end to start", "region_offset_ER_3F", '[% region_offset_ER_3F %]');

  //add all the block size fields to the fields we want them on
  builder.addField(fiveF, "region_length_5F", '[% region_length_5F %]', "5F block size");
  builder.addField(fiveR, "region_length_5R_EF", '[% region_length_5R_EF %]', "5R-EF block size", "top block");
  builder.addField(ER, "region_length_ER_3F", '[% region_length_ER_3F %]', "ER-3F block size", "top block");
  builder.addField(threeR, "region_length_3R", '[% region_length_3R %]', "3R block size");

}

function createGibsonDeletionDiagram(builder) {
  var fiveF = builder.addBox("5F");

  var fiveR = builder.addBox("5R");

  var critExon = builder.addCriticalExon("Exon");

  var threeF = builder.addBox("3F");

  var threeR = builder.addBox("3R");

  //add all the offset size fields to the fields we want them on
  builder.addLabel(fiveF, fiveR, "5F offset", "end to start", "region_offset_5F", '[% region_offset_5F %]');
  builder.addLabel(threeF, threeR, "3R offset", "end to start", "region_offset_3R", '[% region_offset_3R %]');
  builder.addLabel(fiveR, critExon, "5R offset", "end to start", "region_offset_5R", '[% region_offset_5R %]');
  builder.addLabel(critExon, threeF, "3F offset", "end to start", "region_offset_3F", '[% region_offset_3F %]');

  //add all the block size fields to the fields we want them on
  builder.addField(fiveF, "region_length_5F", '[% region_length_5F %]', "5F block size");
  builder.addField(fiveR, "region_length_5R", '[% region_length_5R %]', "5R block size");
  builder.addField(threeF, "region_length_3F", '[% region_length_3F %]', "3F block size");
  builder.addField(threeR, "region_length_3R", '[% region_length_3R %]', "3R block size");

}

var builder;

$(document).ready(function() {
  //width gets dynamically resized anyway
  builder = new DiagramBuilder("holder", 1000, 150);
  builder._attributes.spacing = 150;

  var gibson_type_field = $("input[name='gibson_type']:checked");
  var gibson_type = gibson_type_field.val();
  if (gibson_type =='conditional') {
    createGibsonDiagram(builder);
  }
  else {
    createGibsonDeletionDiagram(builder);
  }

  $("input[name='gibson_type']:radio").change(function(){
      var gibson_type = $(this).val();
      console.log('Gibson Type: ' + gibson_type);
      if (gibson_type=='deletion') {
        builder.clearDiagram();
        builder._attributes.spacing = 150;
        createGibsonDeletionDiagram(builder);
      }
      else {
        builder.clearDiagram();
        builder._attributes.spacing = 150;
        createGibsonDiagram(builder);
      }
  });
});

</script>
